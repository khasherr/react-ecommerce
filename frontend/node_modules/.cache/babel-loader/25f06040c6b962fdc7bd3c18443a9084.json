{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\eCommerce-App\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport axios from 'axios'; // match prop - to find \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  match\n}) => {\n  _s();\n\n  const [product, setProduct] = useState({});\n  useEffect(() => {\n    const fetchProduct = async () => {\n      const {\n        data\n      } = await axios.get(`/api/products/${match.params.id}`);\n      setProduct(data);\n    };\n\n    fetchProduct();\n  }, [match]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light my-3\",\n      to: \"/\",\n      children: \" Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price:  $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description:  $\", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block\",\n                type: \"button\",\n                disable: product.countInStock === 0,\n                children: \" Add To Cart \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"OnBMBBW1eujrCtGfhhy9dINpwX0=\");\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/react/eCommerce-App/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Card","Button","Rating","axios","ProductScreen","match","product","setProduct","fetchProduct","data","get","params","id","image","name","rating","numReviews","price","description","countInStock"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport axios  from 'axios'\r\n\r\n\r\n// match prop - to find \r\nconst ProductScreen = ({ match }) => {\r\n  const [product, setProduct] = useState({})\r\n  useEffect(() => { \r\n    const fetchProduct = async () => { \r\n      const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n\r\n      setProduct (data)\r\n    }\r\n      fetchProduct()\r\n  }, [match])\r\n   return (\r\n     <>\r\n    <Link className='btn btn-light my-3' to='/'> Go Back\r\n    </Link>\r\n  <Row> \r\n    <Col md={6}> \r\n    <Image src={product.image} alt={product.name} fluid/>\r\n   </Col>\r\n    <Col md={3}> \r\n     <ListGroup variant='flush'> \r\n       <ListGroup.Item>\r\n         <h3>{product.name}</h3>\r\n       </ListGroup.Item>\r\n        <ListGroup.Item> \r\n         <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          Price:  ${product.price}\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          Description:  ${product.description}\r\n        </ListGroup.Item>\r\n     </ListGroup>\r\n    </Col>\r\n    <Col md={3}> \r\n     <Card>\r\n      <ListGroup variant=\"flush\"> \r\n       <ListGroup.Item> \r\n        <Row> \r\n         <Col> \r\n          Price:\r\n         </Col>\r\n         <Col> \r\n          <strong>${product.price} </strong>\r\n         </Col>\r\n        </Row>\r\n       </ListGroup.Item>\r\n\r\n       <ListGroup.Item> \r\n        <Row> \r\n         <Col> \r\n          Status:\r\n         </Col>\r\n         <Col> \r\n          {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n         </Col>\r\n        </Row>\r\n       </ListGroup.Item>\r\n       <ListGroup.Item> \r\n       <Button className='btn-block' type='button' disable={product.countInStock === 0}> Add To Cart </Button>\r\n       </ListGroup.Item>\r\n      </ListGroup>\r\n     </Card> \r\n    </Col>\r\n  </Row>\r\n   </>\r\n    \r\n )\r\n\r\n}\r\n\r\nexport default ProductScreen\r\n"]},"metadata":{},"sourceType":"module"}